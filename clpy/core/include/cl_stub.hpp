#pragma once

#define __global __attribute__((annotate("cl_global")))
#define __kernel __attribute__((annotate("cl_kernel")))
#define __local  __attribute__((annotate("cl_local" )))

typedef unsigned char uchar;
typedef unsigned short ushort;
typedef unsigned int uint;
typedef unsigned long ulong;
typedef unsigned long size_t;
typedef long ptrdiff_t;

typedef float half;
typedef half __clpy__half;
#define half __clpy__half

__attribute__((annotate("clpy_no_mangle"))) static unsigned int atomic_cmpxchg(volatile __global unsigned int*, unsigned int, unsigned int);
__attribute__((annotate("clpy_no_mangle"))) static double abs(double);
__attribute__((annotate("clpy_no_mangle"))) static float abs(float);
__attribute__((annotate("clpy_no_mangle"))) static int abs(int);
__attribute__((annotate("clpy_no_mangle"))) static long abs(long);
__attribute__((annotate("clpy_no_mangle"))) static long long abs(long long);
__attribute__((annotate("clpy_no_mangle"))) static double acos(double);
__attribute__((annotate("clpy_no_mangle"))) static float acos(float);
__attribute__((annotate("clpy_no_mangle"))) static double acosh(double);
__attribute__((annotate("clpy_no_mangle"))) static float acosh(float);
__attribute__((annotate("clpy_no_mangle"))) static double asin(double);
__attribute__((annotate("clpy_no_mangle"))) static float asin(float);
__attribute__((annotate("clpy_no_mangle"))) static double asinh(double);
__attribute__((annotate("clpy_no_mangle"))) static float asinh(float);
__attribute__((annotate("clpy_no_mangle"))) static double atan2(double, double);
__attribute__((annotate("clpy_no_mangle"))) static float atan2(float, float);
__attribute__((annotate("clpy_no_mangle"))) static double atan(double);
__attribute__((annotate("clpy_no_mangle"))) static float atan(float);
__attribute__((annotate("clpy_no_mangle"))) static double atanh(double);
__attribute__((annotate("clpy_no_mangle"))) static float atanh(float);
__attribute__((annotate("clpy_no_mangle"))) static double cbrt(double);
__attribute__((annotate("clpy_no_mangle"))) static float cbrt(float);
__attribute__((annotate("clpy_no_mangle"))) static double ceil(double);
__attribute__((annotate("clpy_no_mangle"))) static float ceil(float);
__attribute__((annotate("clpy_no_mangle"))) static double copysign(double, double);
__attribute__((annotate("clpy_no_mangle"))) static float copysign(float, float);
__attribute__((annotate("clpy_no_mangle"))) static double cos(double);
__attribute__((annotate("clpy_no_mangle"))) static float cos(float);
__attribute__((annotate("clpy_no_mangle"))) static double cosh(double);
__attribute__((annotate("clpy_no_mangle"))) static float cosh(float);
__attribute__((annotate("clpy_no_mangle"))) static double erfc(double);
__attribute__((annotate("clpy_no_mangle"))) static float erfc(float);
__attribute__((annotate("clpy_no_mangle"))) static double erf(double);
__attribute__((annotate("clpy_no_mangle"))) static float erf(float);
__attribute__((annotate("clpy_no_mangle"))) static double exp2(double);
__attribute__((annotate("clpy_no_mangle"))) static float exp2(float);
__attribute__((annotate("clpy_no_mangle"))) static double exp(double);
__attribute__((annotate("clpy_no_mangle"))) static float exp(float);
__attribute__((annotate("clpy_no_mangle"))) static double expm1(double);
__attribute__((annotate("clpy_no_mangle"))) static float expm1(float);
__attribute__((annotate("clpy_no_mangle"))) static double fabs(double);
__attribute__((annotate("clpy_no_mangle"))) static float fabs(float);
__attribute__((annotate("clpy_no_mangle"))) static double fdim(double, double);
__attribute__((annotate("clpy_no_mangle"))) static float fdim(float, float);
__attribute__((annotate("clpy_no_mangle"))) static double floor(double);
__attribute__((annotate("clpy_no_mangle"))) static float floor(float);
__attribute__((annotate("clpy_no_mangle"))) static double fma(double, double, double);
__attribute__((annotate("clpy_no_mangle"))) static float fma(float, float, float);
__attribute__((annotate("clpy_no_mangle"))) static double fmax(double, double);
__attribute__((annotate("clpy_no_mangle"))) static float fmax(float, float);
__attribute__((annotate("clpy_no_mangle"))) static double fmin(double, double);
__attribute__((annotate("clpy_no_mangle"))) static float fmin(float, float);
__attribute__((annotate("clpy_no_mangle"))) static double fmod(double, double);
__attribute__((annotate("clpy_no_mangle"))) static float fmod(float, float);
__attribute__((annotate("clpy_no_mangle"))) static int fpclassify(double);
__attribute__((annotate("clpy_no_mangle"))) static int fpclassify(float);
__attribute__((annotate("clpy_no_mangle"))) static double frexp(double, int *);
__attribute__((annotate("clpy_no_mangle"))) static float frexp(float, int *);
__attribute__((annotate("clpy_no_mangle"))) static double hypot(double, double);
__attribute__((annotate("clpy_no_mangle"))) static float hypot(float, float);
__attribute__((annotate("clpy_no_mangle"))) static int ilogb(double);
__attribute__((annotate("clpy_no_mangle"))) static int ilogb(float);
__attribute__((annotate("clpy_no_mangle"))) static bool isfinite(double);
__attribute__((annotate("clpy_no_mangle"))) static bool isfinite(float);
__attribute__((annotate("clpy_no_mangle"))) static bool isgreater(double, double);
__attribute__((annotate("clpy_no_mangle"))) static bool isgreaterequal(double, double);
__attribute__((annotate("clpy_no_mangle"))) static bool isgreaterequal(float, float);
__attribute__((annotate("clpy_no_mangle"))) static bool isgreater(float, float);
__attribute__((annotate("clpy_no_mangle"))) static bool isinf(double);
__attribute__((annotate("clpy_no_mangle"))) static bool isinf(float);
__attribute__((annotate("clpy_no_mangle"))) static bool isless(double, double);
__attribute__((annotate("clpy_no_mangle"))) static bool islessequal(double, double);
__attribute__((annotate("clpy_no_mangle"))) static bool islessequal(float, float);
__attribute__((annotate("clpy_no_mangle"))) static bool isless(float, float);
__attribute__((annotate("clpy_no_mangle"))) static bool islessgreater(double, double);
__attribute__((annotate("clpy_no_mangle"))) static bool islessgreater(float, float);
__attribute__((annotate("clpy_no_mangle"))) static bool isnan(double);
__attribute__((annotate("clpy_no_mangle"))) static bool isnan(float);
__attribute__((annotate("clpy_no_mangle"))) static bool isnormal(double);
__attribute__((annotate("clpy_no_mangle"))) static bool isnormal(float);
__attribute__((annotate("clpy_no_mangle"))) static bool isunordered(double, double);
__attribute__((annotate("clpy_no_mangle"))) static bool isunordered(float, float);
__attribute__((annotate("clpy_no_mangle"))) static long labs(long);
__attribute__((annotate("clpy_no_mangle"))) static double ldexp(double, int);
__attribute__((annotate("clpy_no_mangle"))) static float ldexp(float, int);
__attribute__((annotate("clpy_no_mangle"))) static double lgamma(double);
__attribute__((annotate("clpy_no_mangle"))) static float lgamma(float);
__attribute__((annotate("clpy_no_mangle"))) static long long llabs(long long);
__attribute__((annotate("clpy_no_mangle"))) static long long llrint(double);
__attribute__((annotate("clpy_no_mangle"))) static long long llrint(float);
__attribute__((annotate("clpy_no_mangle"))) static double log10(double);
__attribute__((annotate("clpy_no_mangle"))) static float log10(float);
__attribute__((annotate("clpy_no_mangle"))) static double log1p(double);
__attribute__((annotate("clpy_no_mangle"))) static float log1p(float);
__attribute__((annotate("clpy_no_mangle"))) static double log2(double);
__attribute__((annotate("clpy_no_mangle"))) static float log2(float);
__attribute__((annotate("clpy_no_mangle"))) static double logb(double);
__attribute__((annotate("clpy_no_mangle"))) static float logb(float);
__attribute__((annotate("clpy_no_mangle"))) static double log(double);
__attribute__((annotate("clpy_no_mangle"))) static float log(float);
__attribute__((annotate("clpy_no_mangle"))) static long lrint(double);
__attribute__((annotate("clpy_no_mangle"))) static long lrint(float);
__attribute__((annotate("clpy_no_mangle"))) static long lround(double);
__attribute__((annotate("clpy_no_mangle"))) static long lround(float);
__attribute__((annotate("clpy_no_mangle"))) static long long llround(float);
__attribute__((annotate("clpy_no_mangle"))) static double modf(double, double *);
__attribute__((annotate("clpy_no_mangle"))) static float modf(float, float *);
__attribute__((annotate("clpy_no_mangle"))) static float max(float, float);
__attribute__((annotate("clpy_no_mangle"))) static double min(double, double);
__attribute__((annotate("clpy_no_mangle"))) static float max(float, float);
__attribute__((annotate("clpy_no_mangle"))) static double min(double, double);
__attribute__((annotate("clpy_no_mangle"))) static double nan(const char *);
__attribute__((annotate("clpy_no_mangle"))) static float nanf(const char *);
__attribute__((annotate("clpy_no_mangle"))) static double nearbyint(double);
__attribute__((annotate("clpy_no_mangle"))) static float nearbyint(float);
__attribute__((annotate("clpy_no_mangle"))) static double nextafter(double, double);
__attribute__((annotate("clpy_no_mangle"))) static float nextafter(float, float);
__attribute__((annotate("clpy_no_mangle"))) static double nexttoward(double, double);
__attribute__((annotate("clpy_no_mangle"))) static float nexttoward(float, double);
__attribute__((annotate("clpy_no_mangle"))) static float nexttowardf(float, double);
__attribute__((annotate("clpy_no_mangle"))) static double pow(double, double);
__attribute__((annotate("clpy_no_mangle"))) static double pow(double, int);
__attribute__((annotate("clpy_no_mangle"))) static float pow(float, float);
__attribute__((annotate("clpy_no_mangle"))) static float pow(float, int);
__attribute__((annotate("clpy_no_mangle"))) static double remainder(double, double);
__attribute__((annotate("clpy_no_mangle"))) static float remainder(float, float);
__attribute__((annotate("clpy_no_mangle"))) static double remquo(double, double, int *);
__attribute__((annotate("clpy_no_mangle"))) static float remquo(float, float, int *);
__attribute__((annotate("clpy_no_mangle"))) static double rint(double);
__attribute__((annotate("clpy_no_mangle"))) static float rint(float);
__attribute__((annotate("clpy_no_mangle"))) static double round(double);
__attribute__((annotate("clpy_no_mangle"))) static float round(float);
__attribute__((annotate("clpy_no_mangle"))) static double scalbln(double, long);
__attribute__((annotate("clpy_no_mangle"))) static float scalbln(float, long);
__attribute__((annotate("clpy_no_mangle"))) static double scalbn(double, int);
__attribute__((annotate("clpy_no_mangle"))) static float scalbn(float, int);
__attribute__((annotate("clpy_no_mangle"))) static bool signbit(double);
__attribute__((annotate("clpy_no_mangle"))) static bool signbit(float);
__attribute__((annotate("clpy_no_mangle"))) static double sin(double);
__attribute__((annotate("clpy_no_mangle"))) static float sin(float);
__attribute__((annotate("clpy_no_mangle"))) static double sinh(double);
__attribute__((annotate("clpy_no_mangle"))) static float sinh(float);
__attribute__((annotate("clpy_no_mangle"))) static double sqrt(double);
__attribute__((annotate("clpy_no_mangle"))) static float sqrt(float);
__attribute__((annotate("clpy_no_mangle"))) static double tan(double);
__attribute__((annotate("clpy_no_mangle"))) static float tan(float);
__attribute__((annotate("clpy_no_mangle"))) static double tanh(double);
__attribute__((annotate("clpy_no_mangle"))) static float tanh(float);
__attribute__((annotate("clpy_no_mangle"))) static double tgamma(double);
__attribute__((annotate("clpy_no_mangle"))) static float tgamma(float);
__attribute__((annotate("clpy_no_mangle"))) static double trunc(double);
__attribute__((annotate("clpy_no_mangle"))) static float trunc(float);
__attribute__((annotate("clpy_no_mangle"))) size_t get_local_id(uint);
__attribute__((annotate("clpy_no_mangle"))) size_t get_group_id(uint);
__attribute__((annotate("clpy_no_mangle"))) size_t get_global_id(uint);
__attribute__((annotate("clpy_no_mangle"))) size_t get_num_groups(uint);
typedef enum{
  CLK_LOCAL_MEM_FENCE,
  CLK_GLOBAL_MEM_FENCE
}cl_mem_fence_flags;
__attribute__((annotate("clpy_no_mangle"))) void barrier(cl_mem_fence_flags);
static constexpr double M_PI = 3.14;
